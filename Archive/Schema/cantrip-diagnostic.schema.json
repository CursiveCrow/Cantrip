{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://cantrip-lang.org/schemas/diagnostic-0.7.1.schema.json",
  "title": "Cantrip Diagnostic (JSONL line)",
  "description": "One diagnostic object per line, per \u00a755 Machine\u2011Readable Output (JSON Lines).",
  "type": "object",
  "additionalProperties": true,
  "$defs": {
    "Position": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "line": {
          "type": "integer",
          "minimum": 1
        },
        "col": {
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "line",
        "col"
      ]
    },
    "RangeLC": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "from": {
          "$ref": "#/$defs/Position"
        },
        "to": {
          "$ref": "#/$defs/Position"
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "RangeOffset": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "start": {
          "type": "integer",
          "minimum": 0
        },
        "end": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "Span": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "from": {
          "$ref": "#/$defs/Position"
        },
        "to": {
          "$ref": "#/$defs/Position"
        }
      },
      "required": [
        "file",
        "from",
        "to"
      ]
    },
    "TextEdit_InsertAfterLine": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "insertAfterLine": {
          "type": "integer",
          "minimum": 0
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "file",
        "insertAfterLine",
        "text"
      ]
    },
    "TextEdit_InsertBeforeLine": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "insertBeforeLine": {
          "type": "integer",
          "minimum": 0
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "file",
        "insertBeforeLine",
        "text"
      ]
    },
    "TextEdit_InsertAt": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "position": {
          "$ref": "#/$defs/Position"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "file",
        "position",
        "text"
      ]
    },
    "TextEdit_ReplaceRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "range": {
          "$ref": "#/$defs/RangeLC"
        },
        "replacement": {
          "type": "string"
        }
      },
      "required": [
        "file",
        "range",
        "replacement"
      ]
    },
    "TextEdit_ReplaceOffsetRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "rangeOffset": {
          "$ref": "#/$defs/RangeOffset"
        },
        "replacement": {
          "type": "string"
        }
      },
      "required": [
        "file",
        "rangeOffset",
        "replacement"
      ]
    },
    "TextEdit_DeleteRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "range": {
          "$ref": "#/$defs/RangeLC"
        },
        "delete": {
          "const": true
        }
      },
      "required": [
        "file",
        "range",
        "delete"
      ]
    },
    "TextEdit_DeleteOffsetRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1
        },
        "rangeOffset": {
          "$ref": "#/$defs/RangeOffset"
        },
        "delete": {
          "const": true
        }
      },
      "required": [
        "file",
        "rangeOffset",
        "delete"
      ]
    },
    "TextEdit": {
      "oneOf": [
        {
          "$ref": "#/$defs/TextEdit_InsertAfterLine"
        },
        {
          "$ref": "#/$defs/TextEdit_InsertBeforeLine"
        },
        {
          "$ref": "#/$defs/TextEdit_InsertAt"
        },
        {
          "$ref": "#/$defs/TextEdit_ReplaceRange"
        },
        {
          "$ref": "#/$defs/TextEdit_ReplaceOffsetRange"
        },
        {
          "$ref": "#/$defs/TextEdit_DeleteRange"
        },
        {
          "$ref": "#/$defs/TextEdit_DeleteOffsetRange"
        }
      ]
    },
    "FixIt": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "title": {
          "type": "string",
          "minLength": 1
        },
        "edits": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/TextEdit"
          }
        }
      },
      "required": [
        "title",
        "edits"
      ]
    },
    "TypedHole": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
        },
        "type": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "type"
      ]
    },
    "Context": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "effectMask": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "pattern": "^[a-z][a-z0-9_]*\\.[\\*a-z][a-z0-9_]*(\\([a-z]+\\))?$"
          }
        },
        "typedHole": {
          "$ref": "#/$defs/TypedHole"
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    }
  },
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
    },
    "severity": {
      "type": "string",
      "enum": [
        "error",
        "warning",
        "note"
      ]
    },
    "code": {
      "type": "string",
      "pattern": "^[A-Z][0-9]{4}$"
    },
    "message": {
      "type": "string",
      "minLength": 1
    },
    "spans": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/$defs/Span"
      }
    },
    "fixIts": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/FixIt"
      }
    },
    "context": {
      "$ref": "#/$defs/Context"
    }
  },
  "required": [
    "version",
    "severity",
    "message",
    "spans"
  ],
  "allOf": [
    {
      "if": {
        "properties": {
          "severity": {
            "enum": [
              "error",
              "warning"
            ]
          }
        },
        "required": [
          "severity"
        ]
      },
      "then": {
        "required": [
          "code"
        ],
        "allOf": [
          {
            "if": {
              "properties": {
                "severity": {
                  "const": "error"
                }
              }
            },
            "then": {
              "properties": {
                "code": {
                  "pattern": "^E[0-9]{4}$"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "severity": {
                  "const": "warning"
                }
              }
            },
            "then": {
              "properties": {
                "code": {
                  "pattern": "^W[0-9]{4}$"
                }
              }
            }
          }
        ]
      },
      "else": {
        "allOf": [
          {
            "if": {
              "required": [
                "code"
              ]
            },
            "then": {
              "properties": {
                "code": {
                  "pattern": "^N[0-9]{4}$"
                }
              }
            }
          }
        ]
      }
    }
  ]
}